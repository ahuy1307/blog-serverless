name: Deploy Blog Serverless

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      stage:
        description: "Deployment stage (dev/prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        python-version: [3.11]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Node.js dependencies
        run: |
          cd blog-cronjob
          npm install
          npm install serverless@3.35.2 -g

      - name: Install Python dependencies
        run: |
          cd blog-cronjob
          poetry install --no-interaction

      - name: Serverless Login
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: |
          cd blog-cronjob
          echo "Serverless version:"
          serverless --version
          echo "Access key length: ${#SERVERLESS_ACCESS_KEY} characters"
          echo "Access key first 4 chars: ${SERVERLESS_ACCESS_KEY:0:4}..."
          # Use the correct login method for Serverless
          npx serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
          echo "SERVERLESS_ACCESS_KEY=$SERVERLESS_ACCESS_KEY" >> $GITHUB_ENV

      - name: Deploy with Serverless
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: |
          cd blog-cronjob
          # Use the input stage if triggered manually, otherwise use default 'dev'
          STAGE=${{ github.event.inputs.stage || 'dev' }}
          echo "Deploying to $STAGE environment"
          serverless deploy --stage $STAGE
